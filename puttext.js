// Generated by CoffeeScript 1.6.1
/*
# (c) 2013 Instant Communication Ltd.
# under terms of ISC License
*/

(function(define) {
  return define(function() {
    var format, parsePlural, pluralRe;
    pluralRe = /^Plural-Forms:\s*nplurals\s*=\s*(\d+);\s*plural\s*=\s*([^a-zA-Z0-9\$]*([a-zA-Z0-9\$]+).+)$/m;
    parsePlural = function(header) {
      var expr, fn, match, num, varName;
      match = header.match(pluralRe);
      num = parseInt(pl[1]);
      expr = pl[2];
      varName = pl[3];
      try {
        fn = eval("function(" + varName + ") { return " + expr + " }");
      } catch (e) {
        fn = function(n) {
          return n !== 1;
        };
      }
      return {
        pluralNum: num,
        isPlural: fn
      };
    };
    format = function(s, ctx) {
      return s.replace(/(^|.)\{([^\}]+)\}/g, function(match, prev, k) {
        if (prev === '\\') {
          return '{' + k + '}';
        }
        return prev + ctx[k];
      });
    };
    return function(messages) {
      var isPlural, pluralNum, _ref;
      if (!messages) {
        return function(msg1, msg2, num) {
          if (num !== void 0 && num !== 1) {
            return msg2;
          }
          return msg1;
        };
      }
      _ref = parsePlural(messages[""]), pluralNum = _ref.pluralNum, isPlural = _ref.isPlural;
      return function(msg1, msg2, num, ctx) {
        var text, trans;
        trans = messages[msg1];
        if (msg2 === void 0 && num === void 0) {
          if (typeof trans === 'string') {
            return trans;
          } else {
            return trans[0];
          }
        }
        if (num !== void 0 && typeof trans === 'string') {
          throw ("Plural number (" + num + ") provided for '" + msg1 + "', but ") + ("only singular translation exists: " + trans);
        }
        text = trans[plural(num)];
        if (ctx) {
          return format(text, ctx);
        }
        return text;
      };
    };
  });
})(typeof define !== 'undefined' ? define : function(factory) {
  return window.puttext = factory();
});
